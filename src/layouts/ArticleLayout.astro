---
import type { CollectionEntry } from 'astro:content'
import ArrowLeftIcon from '../components/icons/ArrowLeft.astro'
import BaseHead from '../components/BaseHead.astro'
import RootLayout from './RootLayout.astro'
import Container from '../components/Container.astro'
import { formatDate } from '../utils'
import Prose from '../components/Prose.astro'

type Props = CollectionEntry<'article'>['data'] & { id: string }

const { title, pubDate, heroImage, description } = Astro.props
---

<RootLayout>
  <BaseHead
    slot="head"
    title={title}
    description={description}
    image={heroImage?.src}
  />
  <Container class="mt-16 lg:mt-32">
    <div class="xl:relative">
      <div class="mx-auto max-w-2xl">
        <div>
          <button
            id="back-button"
            type="button"
            aria-label="Go back to articles"
            class="hidden group mb-8 flex h-10 w-10 items-center justify-center rounded-full bg-white shadow-md shadow-zinc-800/5 ring-1 ring-zinc-900/5 transition dark:border dark:border-zinc-700/50 dark:bg-zinc-800 dark:ring-0 dark:ring-white/10 dark:hover:border-zinc-700 dark:hover:ring-white/20 lg:absolute lg:-left-5 lg:-mt-2 lg:mb-0 xl:-top-1.5 xl:left-0 xl:mt-0"
          >
            <ArrowLeftIcon
              class="h-4 w-4 stroke-zinc-500 transition group-hover:stroke-zinc-700 dark:stroke-zinc-500 dark:group-hover:stroke-zinc-400"
            />
          </button>
        </div>
        <article>
          <header class="flex flex-col">
            <h1
              class="mt-6 text-4xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100 sm:text-5xl"
            >
              {title}
            </h1>
            <time
              datetime={pubDate.toISOString()}
              class="order-first flex items-center text-base text-zinc-400 dark:text-zinc-500"
            >
              <span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500"
              ></span>
              <span class="ml-3">{formatDate(pubDate)}</span>
            </time>
          </header>
          <Prose class="mt-8" data-mdx-content>
            <slot />
          </Prose>
        </article>
      </div>
    </div>
  </Container>
</RootLayout>

<script>
  import { previousPath } from '../store'
  const handleBackButtonReveal = () => {
    // The URL constructor can throw when url is bad, just ignore it
    try {
      const canGoBack = Boolean(previousPath.get())
      const button = document.getElementById('back-button')

      if (canGoBack) {
        button?.classList.remove('hidden')
      }
      button?.addEventListener('click', () => {
        history.back()
      })
    } catch {
      // Do nothing
    }
  }

  handleBackButtonReveal()
  document.addEventListener('astro:after-swap', () => {
    handleBackButtonReveal()
  })
</script>
