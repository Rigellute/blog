---
import MoonIcon from '../icons/MoonIcon.astro'
import SunIcon from '../icons/SunIcon.astro'
---

<button
  id="themeToggle"
  type="button"
  aria-label={'Toggle theme'}
  class="group rounded-full bg-white/90 px-3 py-2 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur transition dark:bg-zinc-800/90 dark:ring-white/10 dark:hover:ring-white/20"
>
  <SunIcon
    class="h-6 w-6 fill-zinc-100 stroke-zinc-500 transition group-hover:fill-zinc-200 group-hover:stroke-zinc-700 dark:hidden [@media(prefers-color-scheme:dark)]:fill-teal-50 [@media(prefers-color-scheme:dark)]:stroke-teal-500 [@media(prefers-color-scheme:dark)]:group-hover:fill-teal-50 [@media(prefers-color-scheme:dark)]:group-hover:stroke-teal-600"
  />
  <MoonIcon
    class="hidden h-6 w-6 fill-zinc-700 stroke-zinc-500 transition dark:block [@media(prefers-color-scheme:dark)]:group-hover:stroke-zinc-400 [@media_not_(prefers-color-scheme:dark)]:fill-teal-400/10 [@media_not_(prefers-color-scheme:dark)]:stroke-teal-500"
  />
</button>

<script>
  document.addEventListener('astro:page-load', () => {
    const theme = (() => {
      if (
        typeof localStorage !== 'undefined' &&
        localStorage.getItem('theme')
      ) {
        return localStorage.getItem('theme') || 'dark'
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark'
      }
      return 'light'
    })()

    disableTransitionsTemporarily()
    if (theme === 'light') {
      document.documentElement.classList.remove('dark')
    } else {
      document.documentElement.classList.add('dark')
    }

    window.localStorage.setItem('theme', theme)

    const themeToggle = document.getElementById('themeToggle')

    if (!themeToggle) {
      return
    }

    const handleToggleClick = () => {
      disableTransitionsTemporarily()
      const element = document.documentElement
      element.classList.toggle('dark')

      const isDark = element.classList.contains('dark')
      const otherTheme = isDark ? 'dark' : 'light'
      localStorage.setItem('theme', otherTheme)

      themeToggle.ariaLabel = `Switch to ${otherTheme} theme`
    }

    const otherTheme = theme === 'dark' ? 'light' : 'dark'
    themeToggle.ariaLabel = `Switch to ${otherTheme} theme`
    themeToggle.addEventListener('click', handleToggleClick)

    // Taken from https://github.com/pacocoursey/next-themes/blob/main/packages/next-themes/src/index.tsx#L285-L303
    function disableTransitionsTemporarily() {
      const css = document.createElement('style')
      css.appendChild(
        document.createTextNode(
          `*{
              -webkit-transition:none!important;
              -moz-transition:none!important;
              -o-transition:none!important;
              -ms-transition:none!important;
              transition:none!important
              }`,
        ),
      )
      document.head.appendChild(css)

      // Force restyle
      ;(() => window.getComputedStyle(document.body))()

      // Wait for next tick before removing
      setTimeout(() => {
        document.head.removeChild(css)
      }, 0)
    }

    document.addEventListener('astro:after-swap', () => {
      disableTransitionsTemporarily()
      localStorage.theme === 'dark'
        ? document.documentElement.classList.add('dark')
        : document.documentElement.classList.add('light')
    })
  })
</script>
